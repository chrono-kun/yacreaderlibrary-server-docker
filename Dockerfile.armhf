FROM alpine AS builder

# Download QEMU, see https://github.com/docker/hub-feedback/issues/1261
ENV QEMU_URL https://github.com/balena-io/qemu/releases/download/v3.0.0%2Bresin/qemu-3.0.0+resin-arm.tar.gz
RUN apk add curl && curl -L ${QEMU_URL} | tar zxvf - -C . --strip-components 1

FROM ghcr.io/linuxserver/baseimage-ubuntu:arm32v7-bionic

# Add QEMU
COPY --from=builder qemu-arm-static /usr/bin

# package versions
ARG YACR_VERSION="9.8.1"

# env variables
ENV APPNAME="YACReaderLibraryServer"
ENV HOME="/config"
LABEL maintainer="xthursdayx"

# install Qt5 and dependencies
RUN apt-get update && \
    apt-get install -yq \
	   build-essential \
	   cmake \
	   desktop-file-utils \
	   g++ \
	   git \
	   libpoppler-qt5-dev \
	   libpoppler-qt5-1 \
	   libbz2-dev \
	   libglu1-mesa-dev \
	   liblzma-dev \
	   libpoppler-qt5-dev \
	   libpoppler-qt5-1 \
	   libqt5core5a \
	   libqt5gui5 \
	   libqt5network5 \
	   libqt5opengl5-dev \
	   libqt5sql5-sqlite \
	   libqt5sql5 \
	   libsqlite3-dev \
	   libwebp6 \
	   make \
	   mercurial \
	   qtbase5-dev \
	   qt5-default \
	   qt5-image-formats-plugins \
	   qt5-qmake \
	   qtbase5-dev \
	   qtdeclarative5-dev \
	   qtmultimedia5-dev \
	   qtscript5-dev \
	   sqlite3 \
	   unzip \
	   wget \
	   zlib1g-dev && \
# install unarr libraries
    git clone -b master --single-branch https://github.com/selmf/unarr.git /tmp/unarr && \
    cd /tmp/unarr && \
    mkdir -p build && \
    cd build && \
    cmake -DENABLE_7Z=ON .. && \
    make && \
    make install && \
# build yacreaderlibraryserver
    git clone -b master --single-branch https://github.com/YACReader/yacreader.git /src/git && \
    cd /src/git/ && \
    git checkout $YACR_VERSION && \
    cd /src/git/YACReaderLibraryServer && \
    qmake PREFIX=/app "CONFIG+=unarr server_standalone" YACReaderLibraryServer.pro && \
    make  && \
    make install && \
# clean up
    cd / && \
    apt-get clean && \
    apt-get purge -y git wget build-essential && \
    apt-get -y autoremove && \
    rm -rf \
       /src \
       /tmp/* \
       /var/cache/apt \
       /var/lib/apt/lists/*

ENV LC_ALL="en_US.UTF-8" \
    PATH="/app/bin:$PATH"

# copy files
COPY root/ /

# ports and volumes
EXPOSE 8080
VOLUME /config /comics
