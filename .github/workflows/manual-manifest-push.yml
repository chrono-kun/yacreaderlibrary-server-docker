---
# Build a multi-arch manifest for the p7zip and unarr versions of YACReaderLibraryServer
name: Manual Manifest Push
on:
  workflow_dispatch:

env:
  DOCKERHUB_SLUG: xthursdayx/yacreaderlibrary-server-docker
  GHCR_SLUG: ghcr.io/xthursdayx/yacreaderlibrary-server-docker

jobs:
  build-and-push-multi-arch-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: dh-meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.DOCKERHUB_SLUG }}
          flavor: latest=false
          tags: |
            type=ref,event=tag

      - name: Docker meta
        id: gh-meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.GHCR_SLUG }}
          flavor: latest=false
          tags: |
            type=ref,event=tag

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create manifest for multi-arch images @ Docker Hub
        run: |
          # get artifacts from previous steps and integrate into one multi-arch manifest
          docker pull --platform=linux/amd64 $DOCKERHUB_SLUG:unarr-amd64
          docker pull --platform=linux/arm64 $DOCKERHUB_SLUG:unarr-arm64v8
          docker pull --platform=linux/arm/v7 ${{ env.DOCKERHUB_SLUG }}:unarr-arm32v7
          docker pull --platform=linux/amd64 ${{ env.DOCKERHUB_SLUG }}:latest-amd64
          docker pull --platform=linux/arm64 ${{ env.DOCKERHUB_SLUG }}:latest-arm64v8
          docker pull --platform=linux/arm/v7 ${{ env.DOCKERHUB_SLUG }}:latest-arm32v7
          docker pull --platform=linux/amd64 ${{ env.DOCKERHUB_SLUG }}:p7zip-amd64
          docker pull --platform=linux/arm64 ${{ env.DOCKERHUB_SLUG }}:p7zip-arm64v8
          docker pull --platform=linux/arm/v7 ${{ env.DOCKERHUB_SLUG }}:p7zip-arm32v7
          docker pull --platform=linux/amd64 ${{ steps.dh-meta.outputs.tags }}-amd64
          docker pull --platform=linux/arm64 ${{ steps.dh-meta.outputs.tags }}-arm64v8
          docker pull --platform=linux/arm/v7 ${{ steps.dh-meta.outputs.tags }}-arm32v7
          
          docker manifest create $DOCKERHUB_SLUG:latest \
            ${{ env.DOCKERHUB_SLUG }}:latest-amd64 \
            ${{ env.DOCKERHUB_SLUG }}:latest-arm64v8 \
            ${{ env.DOCKERHUB_SLUG }}:latest-arm32v7
          docker manifest annotate $DOCKERHUB_SLUG:latest --os linux --arch amd64 $DOCKERHUB_SLUG:latest-amd64
          docker manifest annotate $DOCKERHUB_SLUG:latest --os linux --arch arm64 --variant v8 $DOCKERHUB_SLUG:latest-arm64v8
          docker manifest annotate $DOCKERHUB_SLUG:latest --os linux --arch arm --variant v7 $DOCKERHUB_SLUG:latest-arm32v7 
          docker manifest push $DOCKERHUB_SLUG:latest        

          docker manifest create ${{ env.DOCKERHUB_SLUG }}:unarr --amend ${{ env.DOCKERHUB_SLUG }}:unarr-amd64 --amend ${{ env.DOCKERHUB_SLUG }}:unarr-arm64v8 --amend ${{ env.DOCKERHUB_SLUG }}:unarr-arm32v7
          docker manifest annotate ${{ env.DOCKERHUB_SLUG }}:unarr ${{ env.DOCKERHUB_SLUG }}:unarr-amd64 --arch amd64
          docker manifest annotate ${{ env.DOCKERHUB_SLUG }}:unarr ${{ env.DOCKERHUB_SLUG }}:unarr-arm64v8 --arch arm64
          docker manifest annotate ${{ env.DOCKERHUB_SLUG }}:unarr ${{ env.DOCKERHUB_SLUG }}:unarr-arm32v7 --arch arm
          docker manifest push ${{ env.DOCKERHUB_SLUG }}:unarr
          docker manifest create ${{ env.DOCKERHUB_SLUG }}:p7zip ${{ env.DOCKERHUB_SLUG }}:p7zip-amd64 ${{ env.DOCKERHUB_SLUG }}:p7zip-arm64v8 ${{ env.DOCKERHUB_SLUG }}:p7zip-arm32v7
          docker manifest annotate ${{ env.DOCKERHUB_SLUG }}:p7zip ${{ env.DOCKERHUB_SLUG }}:p7zip-amd64 --arch amd64
          docker manifest annotate ${{ env.DOCKERHUB_SLUG }}:p7zip ${{ env.DOCKERHUB_SLUG }}:p7zip-arm64v8 --arch arm64
          docker manifest annotate ${{ env.DOCKERHUB_SLUG }}:p7zip ${{ env.DOCKERHUB_SLUG }}:p7zip-arm32v7 --arch arm
          docker manifest push ${{ env.DOCKERHUB_SLUG }}:p7zip


          docker manifest create ${{ steps.dh-meta.outputs.tags }} ${{ steps.dh-meta.outputs.tags }}-amd64 ${{ steps.dh-meta.outputs.tags }}-arm64v8 ${{ steps.dh-meta.outputs.tags }}-arm32v7
          docker manifest annotate ${{ steps.dh-meta.outputs.tags }} ${{ steps.dh-meta.outputs.tags }}-amd64 --arch amd64
          docker manifest annotate ${{ steps.dh-meta.outputs.tags }} ${{ steps.dh-meta.outputs.tags }}-arm64v8 --arch arm64
          docker manifest annotate ${{ steps.dh-meta.outputs.tags }} ${{ steps.dh-meta.outputs.tags }}-arm32v7 --arch arm
          docker manifest push ${{ steps.dh-meta.outputs.tags }}
          

      - name: Create manifest for multi-arch images @ GHCR
        run: |
          docker pull --platform=linux/amd64 ${{ env.GHCR_SLUG }}:unarr-amd64
          docker pull --platform=linux/arm64 ${{ env.GHCR_SLUG }}:unarr-arm64v8
          docker pull --platform=linux/arm/v7 ${{ env.GHCR_SLUG }}:unarr-arm32v7
          docker pull --platform=linux/amd64 ${{ env.GHCR_SLUG }}:latest-amd64
          docker pull --platform=linux/arm64 ${{ env.GHCR_SLUG }}:latest-arm64v8
          docker pull --platform=linux/arm/v7 ${{ env.GHCR_SLUG }}:latest-arm32v7
          docker pull --platform=linux/amd64 ${{ env.GHCR_SLUG }}:p7zip-amd64
          docker pull --platform=linux/arm64 ${{ env.GHCR_SLUG }}:p7zip-arm64v8
          docker pull --platform=linux/arm/v7 ${{ env.GHCR_SLUG }}:p7zip-arm32v7
          docker manifest create -a ${{ env.GHCR_SLUG }}:unarr ${{ env.GHCR_SLUG }}:unarr-amd64 ${{ env.GHCR_SLUG }}:unarr-arm64v8 ${{ env.GHCR_SLUG }}:unarr-arm32v7
          docker manifest annotate ${{ env.GHCR_SLUG }}:unarr ${{ env.GHCR_SLUG }}:unarr-amd64 --arch amd64
          docker manifest annotate ${{ env.GHCR_SLUG }}:unarr ${{ env.GHCR_SLUG }}:unarr-arm64v8 --arch arm64
          docker manifest annotate ${{ env.GHCR_SLUG }}:unarr ${{ env.GHCR_SLUG }}:unarr-arm32v7 --arch arm
          docker manifest push ${{ env.GHCR_SLUG }}:unarr
          docker manifest create ${{ env.GHCR_SLUG }}:p7zip ${{ env.GHCR_SLUG }}:p7zip-amd64 ${{ env.GHCR_SLUG }}:p7zip-arm64v8 ${{ env.GHCR_SLUG }}:p7zip-arm32v7
          docker manifest annotate ${{ env.GHCR_SLUG }}:p7zip ${{ env.GHCR_SLUG }}:p7zip-amd64 --arch amd64
          docker manifest annotate ${{ env.GHCR_SLUG }}:p7zip ${{ env.GHCR_SLUG }}:p7zip-arm64v8 --arch arm64
          docker manifest annotate ${{ env.GHCR_SLUG }}:p7zip ${{ env.GHCR_SLUG }}:p7zip-arm32v7 --arch arm
          docker manifest push ${{ env.GHCR_SLUG }}:p7zip
          docker manifest create ${{ env.GHCR_SLUG }}:latest ${{ env.GHCR_SLUG }}:latest-amd64 ${{ env.GHCR_SLUG }}:latest-arm64v8 ${{ env.GHCR_SLUG }}:latest-arm32v7
          docker manifest annotate ${{ env.GHCR_SLUG }}:latest ${{ env.GHCR_SLUG }}:latest-amd64 --arch amd64
          docker manifest annotate ${{ env.GHCR_SLUG }}:latest ${{ env.GHCR_SLUG }}:latest-arm64v8 --arch arm64
          docker manifest annotate ${{ env.GHCR_SLUG }}:latest ${{ env.GHCR_SLUG }}:latest-arm32v7 --arch arm
          docker manifest push ${{ env.GHCR_SLUG }}:latest
          docker pull --platform=linux/amd64 ${{ steps.gh-meta.outputs.tags }}-amd64
          docker pull --platform=linux/arm64 ${{ steps.gh-meta.outputs.tags }}-arm64v8
          docker pull --platform=linux/arm/v7 ${{ steps.gh-meta.outputs.tags }}-arm32v7
          docker manifest create ${{ steps.gh-meta.outputs.tags }} ${{ steps.gh-meta.outputs.tags }}-amd64 ${{ steps.gh-meta.outputs.tags }}-arm64v8 ${{ steps.gh-meta.outputs.tags }}-arm32v7
          docker manifest annotate ${{ steps.gh-meta.outputs.tags }} ${{ steps.gh-meta.outputs.tags }}-amd64 --arch amd64
          docker manifest annotate ${{ steps.gh-meta.outputs.tags }} ${{ steps.gh-meta.outputs.tags }}-arm64v8 --arch arm64
          docker manifest annotate ${{ steps.gh-meta.outputs.tags }} ${{ steps.gh-meta.outputs.tags }}-arm32v7 --arch arm
          docker manifest push ${{ steps.gh-meta.outputs.tags }} 
